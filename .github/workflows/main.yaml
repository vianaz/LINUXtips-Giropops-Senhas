name: CI/CD Pipeline

on:
  push:
    branches:
      - main

env:
  DOCKER_REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      image_name_with_tag: ${{ steps.meta.outputs.tags }}
      artifact_name: ${{ env.ARTIFACT_NAME }}
    env:
      DOCKER_FILE: Dockerfile
      ARTIFACT_NAME: apenas-um-teste-${{ github.sha }}

    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.DOCKER_REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and export
        id: build
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ${{ env.DOCKER_FILE }}

          cache-from: type=gha
          cache-to: type=gha,mode=max

          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

          outputs: type=docker,dest=/tmp/${{ env.ARTIFACT_NAME }}.tar

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: /tmp/${{ env.ARTIFACT_NAME }}.tar
          retention-days: 1

  image-scan:
    runs-on: ubuntu-latest
    needs: [build]
    env:
      ARTIFACT_NAME: ${{ needs.build.outputs.artifact_name }}
      IMAGE_NAME_WITH_TAG: ${{ needs.build.outputs.image_name_with_tag }}

    steps:
      - uses: actions/checkout@v4

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: /tmp

      - name: Load image
        run: |
          docker load --input /tmp/${{ env.ARTIFACT_NAME }}.tar
        
      - name: Analyze for critical and high CVEs
        id: docker-scout-cves
        uses: docker/scout-action@v1
        with:
          command: cves
          image: ${{ env.IMAGE_NAME_WITH_TAG }}
          sarif-file: cves-results.sarif
          summary: true

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: cves-results.sarif